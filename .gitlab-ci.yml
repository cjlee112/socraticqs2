image: docker:latest

variables:
  DOCKER_DRIVER: overlay2

services:
- docker:dind

before_script:
- docker info

stages:
  - build
  - test
  - deploy

Build:
  stage: build
  tags:
    - docker
  script:
    - mv mysite/mysite/settings/local_example.py mysite/mysite/settings/local.py
    - mv fab_settings.py.example fab_settings.py
    - wget http://geolite.maxmind.com/download/geoip/database/GeoLiteCity.dat.gz
    - gunzip GeoLiteCity.dat.gz
    - mv GeoLiteCity.dat mysite/GeoLiteCityLocal.dat
    - docker build -f Dockerfile.CI -t $DOCKER_IMG_NAME:$CI_COMMIT_SHA .
    - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
    - docker push $DOCKER_IMG_NAME:$CI_COMMIT_SHA

JavaScript tests:
  stage: test
  tags:
    - docker
  script:
    - docker run $DOCKER_IMG_NAME:$CI_COMMIT_SHA bash -c "cd draw_svg && yarn install && CI=true yarn test"

Python tests:
  stage: test
  tags:
    - docker
  script:
    - docker run $DOCKER_IMG_NAME:$CI_COMMIT_SHA make coverage

Check code quality:
  stage: test
  tags:
    - docker
  script:
    - docker run $DOCKER_IMG_NAME:$CI_COMMIT_SHA make quality


Deploy Stage:
  stage: deploy
  tags:
    - stage
    - deploy
    - ssh
  only:
    - development
  script:
    - cd /home/wwwapps/socraticqs2/
    - git pull
    - source /home/wwwapps/_ve_socraticqs3/bin/activate
    - pip install --ignore-installed -U -r requirements.txt
    - pip install --ignore-installed -U -r requirements/prod.txt
    - cd mysite/
    - python manage.py migrate
    - python manage.py fsm_deploy
    - cd draw_svg/
    - npm install --save-dev
    - npm run build && npm run build:copy
    - yarn build && yarn build:copy
    - cd ..
    - python manage.py collectstatic --noinput
    - sudo supervisorctl restart gunicorn
    - sudo supervisorctl restart celery
    - curl "$SLACK_WEBHOOK_URL" -d 'payload={"text":"Staging has been successfully deployed https://staging.courselets.org\n@redilonka (・ω・)", "link_names":1}'
